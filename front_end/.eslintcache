[{"/Users/caitlinselca/Documents/EasyRead/front_end/src/index.js":"1","/Users/caitlinselca/Documents/EasyRead/front_end/src/App.js":"2","/Users/caitlinselca/Documents/EasyRead/front_end/src/serviceWorker.js":"3","/Users/caitlinselca/Documents/EasyRead/front_end/src/views/Login.js":"4","/Users/caitlinselca/Documents/EasyRead/front_end/src/views/Welcome.js":"5","/Users/caitlinselca/Documents/EasyRead/front_end/src/views/Genres.js":"6","/Users/caitlinselca/Documents/EasyRead/front_end/src/views/CalculateBooks.js":"7","/Users/caitlinselca/Documents/EasyRead/front_end/src/views/Register.js":"8","/Users/caitlinselca/Documents/EasyRead/front_end/src/views/Themes.js":"9","/Users/caitlinselca/Documents/EasyRead/front_end/src/components/PublicRoute.js":"10","/Users/caitlinselca/Documents/EasyRead/front_end/src/components/PrivateRoute.js":"11","/Users/caitlinselca/Documents/EasyRead/front_end/src/views/HomePage.js":"12","/Users/caitlinselca/Documents/EasyRead/front_end/src/components/NavigationBar.js":"13","/Users/caitlinselca/Documents/EasyRead/front_end/src/utils/utils.js":"14"},{"size":503,"mtime":1607329174000,"results":"15","hashOfConfig":"16"},{"size":1237,"mtime":1607329174000,"results":"17","hashOfConfig":"16"},{"size":5086,"mtime":1607329174000,"results":"18","hashOfConfig":"16"},{"size":3497,"mtime":1607329174000,"results":"19","hashOfConfig":"16"},{"size":1908,"mtime":1607329174000,"results":"20","hashOfConfig":"16"},{"size":2862,"mtime":1607329174000,"results":"21","hashOfConfig":"16"},{"size":940,"mtime":1607329174000,"results":"22","hashOfConfig":"16"},{"size":3576,"mtime":1607329174000,"results":"23","hashOfConfig":"16"},{"size":3959,"mtime":1607329174000,"results":"24","hashOfConfig":"16"},{"size":891,"mtime":1607329174000,"results":"25","hashOfConfig":"16"},{"size":1174,"mtime":1607329174000,"results":"26","hashOfConfig":"16"},{"size":8581,"mtime":1607329174000,"results":"27","hashOfConfig":"16"},{"size":5330,"mtime":1607329174000,"results":"28","hashOfConfig":"16"},{"size":2938,"mtime":1607329174000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1412kqm",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/caitlinselca/Documents/EasyRead/front_end/src/index.js",[],["70","71","72"],"/Users/caitlinselca/Documents/EasyRead/front_end/src/App.js",["73"],"import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Login from './views/Login'\nimport Register from './views/Register'\nimport WelcomeView from './views/Welcome'\nimport Genres from './views/Genres'\nimport Themes from './views/Themes'\nimport CalculateBooks from './views/CalculateBooks'\nimport HomePage from './views/HomePage'\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from'./components/PublicRoute';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <PrivateRoute restricted={false} path=\"/\" component={HomePage} exact/>\n          <PrivateRoute restricted={true} path=\"/calculatebooks\" component={CalculateBooks}  exact/>\n          <PrivateRoute restricted={true} path=\"/themes\" component={Themes} exact/>\n          <PrivateRoute restricted={true} path=\"/genres\" component={Genres} exact/>\n          <PrivateRoute restricted={true} path=\"/welcome\" component={WelcomeView} exact/>\n          <PublicRoute path=\"/register\" component={Register} exact/>\n          <PublicRoute path=\"/login\" component={Login} exact/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/caitlinselca/Documents/EasyRead/front_end/src/serviceWorker.js",[],"/Users/caitlinselca/Documents/EasyRead/front_end/src/views/Login.js",["74"],"import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { login }from \"../utils/utils\";\nimport Cookies from 'universal-cookie';\nimport \"./Login.css\";\n\nconst cookies = new Cookies();\n\nconst LoginView = props => {\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const history = useHistory();\n\n  const loginUser = async event => {\n    event.preventDefault();\n    let response = await login(state);\n    if(response.status == 200){\n      cookies.set('accessToken', response.data.accessToken, { path: '/' });\n      history.push('/welcome');\n    }\n    console.log(response);\n  };\n\n  const handleChange = event => {\n    setState({ ...state, [event.target.id]: event.target.value });\n  };\n\n  const useStyles = makeStyles(theme => ({\n    textField: {\n      width: \"100%\",\n      marginTop: \"1%\"\n    },\n    button: {\n      width: \"50%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginLeft: \"25%\",\n      marginTop: \".5%\"\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"Login\">\n      <div className=\"EasyReadLoginTitle\">\n        <label>\n            Easy Read\n        </label>\n      </div>\n      <div className=\"EasyReadLoginIntro\">\n        <label>\n            Finding books has never been easier.\n        </label>\n      </div>\n      <div className=\"LoginContainer\">\n      <form onSubmit={loginUser} autoComplete=\"off\">\n      <div className = \"EasyReadLoginQuestion\">\n      <label>\n          Are you already part of Easy Read?\n      </label>\n      </div>\n        <div>\n          <TextField\n            value={state.username}\n            // error={\n            //   !isEmpty(props.errors.username) ||\n            //   !isEmpty(props.errors.userNotFound)\n            // }\n            // helperText={props.errors.username || props.errors.userNotFound}\n            onChange={handleChange}\n            className={classes.textField}\n            id=\"username\"\n            label=\"Username\"\n            variant=\"outlined\"\n          />\n        </div>\n        <br></br>\n        <div>\n          <TextField\n            value={state.password}\n            // error={\n            //   !isEmpty(props.errors.password) ||\n            //   !isEmpty(props.errors.credentials)\n            // }\n            // helperText={props.errors.password || props.errors.credentials}\n            onChange={handleChange}\n            className={classes.textField}\n            id=\"password\"\n            label=\"Password\"\n            variant=\"outlined\"\n            type=\"password\"\n          />\n        </div>\n        <br></br>\n        <div>\n          <Button\n            className={classes.button}\n            type=\"submit\"\n            variant=\"contained\"\n            //color=\"primary\"\n          >\n            Login\n          </Button>\n        </div>\n\n        <br></br>\n        <div className = \"EasyReadRegisterQuestion\">\n        <label>\n          Not part of Easy Read?\n        </label>\n        </div>\n        <div>\n        <Button\n          className={classes.button}\n          type=\"submit\"\n          variant=\"contained\"\n            //color=\"red\"\n          onClick={() => {history.push('/register')}}\n          >\n            Sign Up\n          </Button>\n        </div>\n      </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginView;","/Users/caitlinselca/Documents/EasyRead/front_end/src/views/Welcome.js",["75"],"import React, {  } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {BrowserRouter as Router, Link} from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport \"./Welcome.css\";\n\n\nconst WelcomeView = props => {\n\n    const history = useHistory();\n\n    const useStyles = makeStyles(theme => ({\n        button: {\n            width: \"40%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginLeft: \"30%\",\n            marginTop: \".5%\"\n        }\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <div className=\"Welcome\">\n            <br></br>\n            <br></br>\n            <div className=\"WelcomeContainer\">\n                <p>\n                <br></br>\n                <h1>Welcome to Easy Read!</h1>\n                <br></br>\n                <h2>Our Service is very simple. All you have to do is select your preferred genres, themes,\n                authors, time periods, places, and age ranges.</h2> \n                <h2>Then we will recommend books within those preferences.*</h2> \n                <h2>Want horror books that include plot twists? We will recommend the \n                best books tailored just for you.</h2>\n                {/* <br></br> */}\n                <br></br>\n                <br></br>\n                <Router>\n                <Button className={classes.button} type=\"submit\" variant=\"contained\" onClick={()=>{history.push('/genres')}}>\n                    Let's Try This!\n                </Button>\n                </Router>\n                <br></br>\n                <br></br>\n                <br></br>\n                <subfont>*The more unique preferences, the more limited our recommendations will be.</subfont>\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default WelcomeView;","/Users/caitlinselca/Documents/EasyRead/front_end/src/views/Genres.js",["76","77"],"import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./Genres.css\";\nimport labels from \"../static/labels\";\nimport { saveGenres } from \"../utils/utils\";\n\nconst GenresView = props => {\n  const [selectedGenres, setGenres] = useState(new Map());\n  labels[0].genres.map(genre => selectedGenres.set(genre, false));\n\n  const history = useHistory();\n\n  const submitGenre = async event => {\n    event.preventDefault();\n\n    let trueGenres = [];\n\n    for (const [key, value] of selectedGenres.entries()) {\n      if (value) trueGenres.push(key);\n    }\n\n    // If user chooses to skip, then all themes are automatically chosen\n    if(trueGenres.length == 0){\n      for (const [key, value] of selectedGenres.entries()) {\n        trueGenres.push(key);\n      }\n    }\n\n    const response = await saveGenres(trueGenres);\n    console.log(response);\n    history.push('/themes');\n  };\n\n  const useStyles = makeStyles(theme => ({\n    unselectedButton: {\n      color: \"#fff\",\n      background: \"#3f51b5\",\n      width: \"30%\",\n      marginTop: \"2%\"\n    },\n    selectedButton: {\n      color: \"#fff\",\n      background: \"#2f3d87\",\n      width: \"30%\",\n      marginTop: \"2%\"\n    },\n    button2: {\n      width: \"100%\"\n    }\n  }));\n\n  const classes = useStyles();\n\n  const handleChange = event => {\n    let genre = event.currentTarget.value;\n    let selected = selectedGenres.get(genre);\n    setGenres(selectedGenres.set(genre, !selected));\n    let newStyles = !selected ? classes.selectedButton : classes.unselectedButton;\n    event.currentTarget.className = `MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary ${newStyles}`;\n  };\n\n  return (\n    <div className = \"Register\">\n        <div className=\"EasyReadTitle\">\n        </div>\n    <div className = \"GenresContainer\">\n      <form onSubmit={submitGenre} autoComplete=\"off\">\n      <div className = \"EasyReadGenresTitle\">\n      <label>\n          Select Your Favorite Genres!\n      </label>\n      </div>\n        <br></br>\n        <div className = \"ButtonAlignment\">\n          {labels[0].genres.map((genre) => (\n            <span>\n            <Button\n              onClick={handleChange}\n              className={classes.unselectedButton}\n              variant=\"contained\"\n              color=\"primary\"\n              value={genre}\n            >\n              {genre}\n            </Button>{' '}\n          </span>\n          ))}\n        </div>\n        <div className = \"EndButton\">\n          <Button\n            className={classes.button2}\n            type=\"submit\"\n            variant=\"contained\"\n            // href=\"/subjects\"\n          >\n            Next Page\n          </Button>\n        </div>\n      </form>\n      </div>\n    </div>\n  );\n};\n\nexport default GenresView;","/Users/caitlinselca/Documents/EasyRead/front_end/src/views/CalculateBooks.js",["78"],"import React, { } from 'react';\nimport \"./CalculateBooks.css\";\n\nconst CalculateBooksView = props => {\n\n  // setTimeout(() => {\n  //   window.location.href = \"/\"\n  // }, 6000); // 1000 = 1 second, we can change it to any specific time.\n\n  return (\n    \n    <div className=\"CalculateBooks\">\n      <br></br>\n      <br></br>\n      <div className=\"CalculateBooksContainer\">\n        <p>\n        <h1>Great! Thanks for all the info.</h1>\n        <br></br><br></br>\n        <h1>Give us a second while we calculate the best books for you!</h1>\n        <br></br><br></br>\n        <h1>If you’ve made an error or would like different suggestions, we recommend selecting your preferences again.</h1>\n        <br></br>\n        \n            <img className=\"spinninggear\" src= {require(\"../static/Spinner-1s-200px-2.gif\")}></img>\n        \n        <br></br>\n        <br></br>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default CalculateBooksView;","/Users/caitlinselca/Documents/EasyRead/front_end/src/views/Register.js",["79"],"import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n// import isEmpty from \"is-empty\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { register } from \"../utils/utils\";\nimport \"./Register.css\";\n\nconst RegisterView = props => {\n  const [state, setState] = useState({\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const history = useHistory();\n\n  const registerUser = async event => {\n    event.preventDefault();\n    let response = await register(state);\n    if(response.status == 201) history.push('/login');\n    console.log(response);\n  };\n\n  const handleChange = event => {\n    setState({ ...state, [event.target.id]: event.target.value });\n  };\n\n  const useStyles = makeStyles(theme => ({\n    textField: {\n      width: \"100%\"\n    },\n    button: {\n      width: \"50%\",\n      marginLeft: \"20%\"\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className = \"Register\">\n      <div className=\"EasyReadTitle\">\n      </div>\n    <div className = \"RegisterContainer\">\n      <form onSubmit={registerUser} autoComplete=\"off\">\n      <div className = \"EasyReadRegisterTitle\">\n      <label>\n          Fill out the information below to be part of Easy Read!\n      </label>\n      </div>\n        <div>\n          <TextField\n            value={state.email}\n            // error={!isEmpty(props.errors.email)}\n            // helperText={props.errors.email}\n            onChange={handleChange}\n            className={classes.textField}\n            id=\"email\"\n            label=\"Email\"\n            variant=\"outlined\"\n          />\n        </div>\n        <br></br>\n        <div>\n          <TextField\n            value={state.username}\n            // error={\n            //   !isEmpty(props.errors.registerUsername) ||\n            //   !isEmpty(props.errors.userFound)\n            // }\n            // helperText={props.errors.registerUsername || props.errors.userFound}\n            onChange={handleChange}\n            className={classes.textField}\n            id=\"username\"\n            label=\"Username\"\n            variant=\"outlined\"\n          />\n        </div>\n        <br></br>\n        <div>\n          <TextField\n            value={state.password}\n            // error={!isEmpty(props.errors.registerPassword)}\n            // helperText={props.errors.registerPassword}\n            onChange={handleChange}\n            className={classes.textField}\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            variant=\"outlined\"\n          />\n        </div>\n        <br></br>\n        <div>\n          <TextField\n            value={state.confirmPassword}\n            // error={!isEmpty(props.errors.confirmPassword)}\n            // helperText={props.errors.confirmPassword}\n            onChange={handleChange}\n            className={classes.textField}\n            id=\"confirmPassword\"\n            type=\"password\"\n            label=\"Confirm Password\"\n            variant=\"outlined\"\n          />\n        </div>\n        <br></br>\n        <div>\n          <Button\n            className={classes.button}\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Sign Up\n          </Button>\n        </div>\n        <br></br>\n        <div className = \"LoginRoute\">\n          <Link onClick={() => {history.push('/login')}}>Want to login instead?</Link>\n        </div>\n      </form>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterView;","/Users/caitlinselca/Documents/EasyRead/front_end/src/views/Themes.js",["80","81","82","83","84","85","86","87","88"],"import React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from '@material-ui/styles';\nimport { Box } from '@material-ui/core';\nimport \"./Themes.css\";\nimport labels from \"../static/labels\"\nimport { saveThemes } from '../utils/utils'\n\nconst q = {\n  NONE: 0,\n  OR: 1,\n  AND: 2\n}\n\nconst ThemesView = props => {\n  const [ors, setORs] = useState([]);\n  const [ands, setANDs] = useState([]);\n  const [selectedThemes, setThemes] = useState(new Map());\n  \n  const history = useHistory();\n  \n  useEffect(() => {\n    labels[0].themes.map(theme => selectedThemes.set(theme, q.NONE));\n  }, [])\n\n  const submitThemes = async event => {\n    event.preventDefault();\n\n    let themes = {\n      ands: [],\n      ors: []\n    };\n\n    if(ors.length == 0 && ands.length == 0){\n      for(const [key, value] of selectedThemes.entries()){\n        themes.ors.push(key);\n      }\n    }else{\n      themes.ands = ands;\n      themes.ors = ors;\n    }\n    \n    const response = await saveThemes(themes);\n    console.log(response);\n    history.push('/');\n  }\n\n  const useStyles = makeStyles(theme => ({\n    unselectedButton: {\n      color: \"#fff\",\n      width: \"30%\",\n      marginTop: \"2%\"\n    },\n    selectedButton: {\n      color: \"#fff\",\n      background: \"#2f3d87\",\n      width: \"30%\",\n      marginTop: \"2%\"\n    },\n    button2: {\n      width: \"100%\"\n    },\n    query: {\n      fontSize: 12\n    }\n  }));\n  \n  const classes = useStyles();\n  \n  const handleChange = event => {\n    let theme = event.currentTarget.value;\n    let selected = selectedThemes.get(theme);\n    switch(selected){\n      case q.NONE:\n        setThemes(selectedThemes.set(theme, q.OR));\n        break;\n      case q.OR:\n        setThemes(selectedThemes.set(theme, q.AND));\n        break;\n      case q.AND:\n        setThemes(selectedThemes.set(theme, q.NONE));\n        break;\n    }\n    // Update query\n    const themes = getThemes();\n    setORs(Array.from(themes.filter(value => selectedThemes.get(value) == q.OR)));\n    setANDs(Array.from(themes.filter(value => selectedThemes.get(value) == q.AND)));\n  };\n\n  const getThemes = () => {\n    let themes = [];\n    for(const [key, value] of selectedThemes.entries()){\n      if(value > q.NONE) themes.push(key);\n    }\n    return themes;\n  }\n\n  return (\n    <div className = \"Register\">\n            <div className=\"EasyReadTitle\">\n        {/* <label>\n            Easy Read\n        </label> */}\n      </div>\n    <div className = \"RegisterContainer\">\n      <form onSubmit={submitThemes} autoComplete=\"off\">\n      <div className = \"EasyReadRegisterTitle\">\n      <label>\n          Select Your Favorite Themes!\n      </label>\n      </div>\n        <br></br>\n        <Box className={classes.query} width={1}>\n          <div>Should have at least one: | {ors.map(value => (\n              <span>{value} | </span>\n            ))}\n          </div>\n          <div>Must have: | {ands.map(value => (\n              <span>{value} | </span>\n            ))}\n          </div>\n        </Box>\n        <div className = \"ButtonAlignment\">\n          {labels[0].themes.map((theme) => (\n            <span>\n              <Button\n                onClick={handleChange}\n                className={selectedThemes.get(theme) > q.NONE ? classes.selectedButton : classes.unselectedButton}\n                variant=\"contained\"\n                color=\"primary\"\n                value={theme}\n              >\n                {theme}\n              </Button> {' '}\n            </span>\n          ))}\n        </div>\n        <div className = \"EndButton\">\n          <Button\n            className={classes.button2}\n            type=\"submit\"\n            variant=\"contained\"\n            //color=\"primary\"\n          >\n            Next Page\n          </Button>\n        </div>\n      </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ThemesView;","/Users/caitlinselca/Documents/EasyRead/front_end/src/components/PublicRoute.js",["89"],"import React, { useEffect, useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils/utils';\n\nconst PublicRoute = ({component: Component, ...rest}) => {\n    const [isMounted, setMounted] = useState(false);\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    useEffect(() => {\n        const getLogin = async () => {\n            const response = await isLogin();\n            if(response.status == 200) setLoggedIn(true);\n            setMounted(true);\n        }\n        getLogin();\n    });\n\n    return isMounted ? (\n        // restricted = false meaning public route\n        // restricted = true meaning restricted route\n        <Route {...rest} render={props => (\n            loggedIn ?\n                <Redirect to=\"/\" />\n            : <Component {...props} />\n        )} />\n    )\n    : (<div></div>);\n};\n\nexport default PublicRoute;","/Users/caitlinselca/Documents/EasyRead/front_end/src/components/PrivateRoute.js",["90","91"],"import React, { useEffect, useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils/utils';\n\nconst PrivateRoute = ({component: Component, restricted, ...rest}) => {\n    const [isMounted, setMounted] = useState(false);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [isNewUser, setNewUser] = useState(false);\n\n    useEffect(() => {\n        const getLogin = async () => {\n            const response = await isLogin();\n            if(response.status == 200){\n                setLoggedIn(true);\n                if(response.data == 'new') setNewUser(true);\n            }\n            setMounted(true);\n        }\n        getLogin();\n    });\n\n    return isMounted ? (\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /login page\n        <Route {...rest} render={props => (\n            loggedIn ? (\n                !isNewUser && restricted ? \n                    <Redirect to=\"/\" /> \n                    : <Component {...props} />\n            )\n            : <Redirect to=\"/login\" />\n        )} />\n    )\n    : (<div></div>);\n};\n\nexport default PrivateRoute;","/Users/caitlinselca/Documents/EasyRead/front_end/src/views/HomePage.js",["92","93","94","95","96"],"import React from \"react\";\nimport \"./HomePage.css\";\nimport { getGenres, getBooks } from '../utils/utils'; \nimport NavigationBar from '../components/NavigationBar';\nimport Container from '@material-ui/core/Container';\nimport CalculateBooks from './CalculateBooks';\n\nclass HomePage extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      books: [],\n      mounted: false,\n      currentPage: 1,\n      perPage: 50,\n      totalBooks: 0,\n      totalPages: 0,\n      displayBooks: [],\n    }\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handlePerPageChange = this.handlePerPageChange.bind(this);\n    this.checkInRange = this.checkInRange.bind(this);\n    this.renderBooks = this.renderBooks.bind(this);\n    this.renderPagination = this.renderPagination.bind(this);\n  }\n\n  //==================================================================================================\n  // ComponentDid{x} functions\n  //==================================================================================================\n\n  async componentDidMount() {\n    let cache = localStorage.getItem(\"cache\");\n    try {\n        cache = JSON.parse(cache);\n    } catch (e) {\n        cache = undefined;\n    }\n    \n    if(cache && cache.books.length !== 0){\n      this.setState({\n        books: cache.books,\n        mounted: cache.mounted,\n        totalBooks: parseInt(cache.totalBooks),\n        totalPages: parseInt(cache.totalPages),\n        displayBooks: cache.books.slice(0, this.state.perPage)\n      })\n    }\n\n    else{\n      console.log(\"Loading...\");\n\n      let response = await getBooks();\n      console.log(\"Response: \", response);\n\n      this.setState({\n        books: response.books, \n        mounted:true,\n        totalBooks: response.books? response.books.length: 0,\n        totalPages: response.books? Math.ceil(response.books.length/this.state.perPage): 0,\n        displayBooks: response.books? response.books.slice(0, this.state.perPage):0\n      });\n\n      localStorage.setItem(\"cache\", JSON.stringify(this.state));\n    }\n  }\n\n  //==================================================================================================\n  // Event Hadlers\n  //==================================================================================================\n\n  handlePageClick(event){\n    event.preventDefault();\n    let arrEnd = (event.target.value * this.state.perPage);\n    let arrBegin = arrEnd - this.state.perPage;\n    \n    this.setState({\n      currentPage: parseInt(event.target.value),\n      displayBooks: this.state.books.slice(arrBegin, arrEnd)\n    });\n\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }\n\n  handlePerPageChange(event){\n    event.preventDefault();\n    let num = parseInt(event.target.value);\n    if(num === this.state.perPage) return;\n    \n    this.setState({\n      perPage: num,\n      currentPage: 1,\n      perPage: num,\n      totalPages: Math.ceil(this.state.totalBooks/num),\n      displayBooks: this.state.books.slice(0, num)\n    });\n  }\n\n\n  //==================================================================================================\n  // Helper functions\n  //==================================================================================================\n\n  // check if a page is in range\n  checkInRange(numList, num){\n    return numList.includes(num);\n  }\n\n  // truncate longer titles of the books\n  truncate(input) {\n    if (input.length > 50) {\n       return input.substring(0, 50) + '...';\n    }\n    return input;\n };\n\n\n  //==================================================================================================\n  // render methods\n  //==================================================================================================\n\n  renderBooks(){\n    return(\n      <div className = \"root fadeIn\">\n        {this.state.displayBooks == null || this.state.displayBooks.length == 0 ? \n          (<div> No books :( </div>)\n          : \n          this.state.displayBooks.map((book, key) => {\n            return(\n              <div className = \"books\" key={key}>\n                \n                <div className=\"image\">\n                  <img className = \"book-cover\" src={`http://covers.openlibrary.org/b/id/${book.cover}-M.jpg`}></img>\n                </div>\n\n                <div className=\"title\">{this.truncate(book.title)}</div>\n                <div className=\"author\">{book.author}</div>\n              </div>\n            )\n          }) \n        }\n      </div>\n    )\n  }\n\n  renderPagination(){\n\n    let numRange = [];\n    let lowerLimit = this.state.currentPage-3 < 0? 0: this.state.currentPage-3;\n    let upperLimit = (this.state.currentPage + 1)>this.state.totalPages? this.state.totalPages: this.state.currentPage+1;\n    lowerLimit+=1;\n    upperLimit+=1;\n\n    for(let i = lowerLimit; i < upperLimit; i++){\n      numRange.push(i);\n    }\n\n    let style={\n      \"background-color\": \"rgb(177, 140, 93)\",\n      \"color\": \"white\"\n    }\n\n    return(\n      <div className=\"centerbutton\">\n        <div className=\"pagination\">\n          {this.state.currentPage !== 1 && <button className=\"page-btn-layout\" value={this.state.currentPage-1}  onClick = {this.handlePageClick}>❮</button>}\n\n          {!this.checkInRange(numRange, 1) && this.checkInRange(numRange, 2)&&\n              <button className=\"page-btn-layout\" value=\"1\" onClick = {this.handlePageClick}>1</button>\n          }\n          \n          {!this.checkInRange(numRange, 2) &&\n            <div className = \"extra-btn-container\">\n              <button className=\"page-btn-layout\" value=\"1\" onClick = {this.handlePageClick}>1</button>\n              <button className=\"page-btn-layout\" value=\"2\" onClick = {this.handlePageClick}>2</button>\n            </div>\n          }          \n          \n          {lowerLimit - 2 >= 1 && <button className=\"page-btn-layout\" value=\"...\">...</button>}\n\n          {numRange.map((num, key) => {\n            return(\n              <button style={this.state.currentPage== num? style: null} className=\"page-btn-layout\" key={key} value={num} onClick = {this.handlePageClick}>{num}</button>\n            );\n\n          })}\n\n          {this.state.totalPages-1 - upperLimit >= 1 && <button className=\"page-btn-layout\" value=\"...\">...</button>}\n          \n          {!this.checkInRange(numRange, this.state.totalPages-1)&&\n            <div className = \"extra-btn-container\">\n              <button className=\"page-btn-layout\" value={this.state.totalPages-1} onClick = {this.handlePageClick}>{this.state.totalPages-1}</button>\n              <button className=\"page-btn-layout\" value={this.state.totalPages} onClick = {this.handlePageClick}>{this.state.totalPages}</button>\n            </div>\n          }\n\n          {!this.checkInRange(numRange, this.state.totalPages)&& this.checkInRange(numRange, this.state.totalPages-1)&&\n            <button className=\"page-btn-layout\" value={this.state.totalPages} onClick = {this.handlePageClick}>{this.state.totalPages}</button>          \n          } \n\n          {this.state.currentPage !== this.state.totalPages && <button className=\"page-btn-layout\" value={this.state.currentPage+1}  onClick = {this.handlePageClick}>❯</button>}\n        </div>\n      </div>\n    );\n\n  }\n\n  render(){\n    console.log(this.state);\n\n    return !this.state.mounted ? (<CalculateBooks />) : (\n      <div className=\"HomePage\">\n        <NavigationBar />\n        <Container maxWidth=\"md\">\n          <div className = \"page-indicator page-header-container-flex fadeIn\">\n            <div> Page: {this.state.currentPage}</div>\n            <div className = \"page-result-total\">\n                <div>Showing {this.state.perPage} results</div>\n                <div className = \"result-change-small\">Change\n                  <button value=\"20\" className = \"change-perpage-btn-layout\" onClick={this.handlePerPageChange}> 20 </button>\n                  <button value=\"50\" className = \"change-perpage-btn-layout\" onClick={this.handlePerPageChange}> 50 </button>\n                  <button value=\"100\" className = \"change-perpage-btn-layout\" onClick={this.handlePerPageChange}> 100 </button>\n                  <button value=\"200\" className = \"change-perpage-btn-layout\" onClick={this.handlePerPageChange}> 200 </button>\n                </div>\n            </div>\n          </div> \n          {/* render books */}\n          {this.renderBooks()}          \n          <div className = \"page-indicator page-bottom fadeIn\"> Page: {this.state.currentPage}</div>\n        </Container>        \n\n        {/* pagination logic */}\n        {this.renderPagination()}\n      </div>\n    );\n  }\n};\n\nexport default HomePage;","/Users/caitlinselca/Documents/EasyRead/front_end/src/components/NavigationBar.js",["97","98","99","100"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport StarIcon from '@material-ui/icons/Star';\nimport Button from '@material-ui/core/Button';\nimport booksIcon from '../static/book_pile_icon.svg';\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from 'universal-cookie';\nimport './NavigationBar.css';\n\nconst cookies = new Cookies();\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const history = useHistory();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleLogOut = () => {\n    cookies.set('accessToken', null);\n    localStorage.removeItem(\"cache\");\n    window.location.href = \"/login\";\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" style={{ flex:1 }} noWrap>\n          </Typography>\n          \n          <div className = \"title-header\">\n            <div className = \"flex-me-up\">\n              <img src={booksIcon} style={{ flex:1 }} className=\"BooksIcon\" noWrap/>\n              <div className = \"title-header-bar-thingy\">Easy Read</div>\n            </div>\n            <Button color=\"inherit\" className=\"logout\" onClick={handleLogOut}>Logout</Button>\n          </div>\n          \n          \n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <img src={booksIcon} style={{ flex:1 }} className=\"BooksIcon\" noWrap/>\n          Easy Read\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n      \n        <Divider />\n        <List>\n          <ListItem button key='Dashboard'>\n              <ListItemIcon><StarIcon /></ListItemIcon>\n              <ListItemText primary='Dashboard' />\n          </ListItem>\n          <ListItem button key='Favorites'>\n              <ListItemIcon><StarIcon /></ListItemIcon>\n              <ListItemText primary='Favorites' />\n          </ListItem>\n        </List>\n        \n      </Drawer>\n      \n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n      </main>\n    </div>\n  );\n}\n\n\n","/Users/caitlinselca/Documents/EasyRead/front_end/src/utils/utils.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":3,"column":34,"nodeType":"109","messageId":"110","endLine":3,"endColumn":39},{"ruleId":"111","severity":1,"message":"112","line":23,"column":24,"nodeType":"113","messageId":"114","endLine":23,"endColumn":26},{"ruleId":"107","severity":1,"message":"115","line":4,"column":34,"nodeType":"109","messageId":"110","endLine":4,"endColumn":38},{"ruleId":"111","severity":1,"message":"112","line":25,"column":26,"nodeType":"113","messageId":"114","endLine":25,"endColumn":28},{"ruleId":"107","severity":1,"message":"116","line":26,"column":24,"nodeType":"109","messageId":"110","endLine":26,"endColumn":29},{"ruleId":"117","severity":1,"message":"118","line":24,"column":13,"nodeType":"119","endLine":24,"endColumn":94},{"ruleId":"111","severity":1,"message":"112","line":23,"column":24,"nodeType":"113","messageId":"114","endLine":23,"endColumn":26},{"ruleId":"107","severity":1,"message":"120","line":4,"column":22,"nodeType":"109","messageId":"110","endLine":4,"endColumn":36},{"ruleId":"107","severity":1,"message":"121","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":26,"column":6,"nodeType":"124","endLine":26,"endColumn":8,"suggestions":"125"},{"ruleId":"111","severity":1,"message":"112","line":36,"column":19,"nodeType":"113","messageId":"114","endLine":36,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":36,"column":39,"nodeType":"113","messageId":"114","endLine":36,"endColumn":41},{"ruleId":"107","severity":1,"message":"116","line":37,"column":23,"nodeType":"109","messageId":"110","endLine":37,"endColumn":28},{"ruleId":"126","severity":1,"message":"127","line":75,"column":5,"nodeType":"128","messageId":"129","endLine":85,"endColumn":6},{"ruleId":"111","severity":1,"message":"112","line":88,"column":72,"nodeType":"113","messageId":"114","endLine":88,"endColumn":74},{"ruleId":"111","severity":1,"message":"112","line":89,"column":73,"nodeType":"113","messageId":"114","endLine":89,"endColumn":75},{"ruleId":"111","severity":1,"message":"112","line":12,"column":32,"nodeType":"113","messageId":"114","endLine":12,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":13,"column":32,"nodeType":"113","messageId":"114","endLine":13,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":15,"column":34,"nodeType":"113","messageId":"114","endLine":15,"endColumn":36},{"ruleId":"107","severity":1,"message":"130","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":19},{"ruleId":"131","severity":1,"message":"132","line":95,"column":7,"nodeType":"133","messageId":"114","endLine":95,"endColumn":14},{"ruleId":"111","severity":1,"message":"112","line":127,"column":76,"nodeType":"113","messageId":"114","endLine":127,"endColumn":78},{"ruleId":"117","severity":1,"message":"118","line":135,"column":19,"nodeType":"119","endLine":135,"endColumn":112},{"ruleId":"111","severity":1,"message":"112","line":185,"column":52,"nodeType":"113","messageId":"114","endLine":185,"endColumn":54},{"ruleId":"107","severity":1,"message":"134","line":18,"column":8,"nodeType":"109","messageId":"110","endLine":18,"endColumn":17},{"ruleId":"107","severity":1,"message":"135","line":92,"column":9,"nodeType":"109","messageId":"110","endLine":92,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":132,"column":15,"nodeType":"119","endLine":132,"endColumn":85},{"ruleId":"117","severity":1,"message":"118","line":151,"column":11,"nodeType":"119","endLine":151,"endColumn":81},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"jsx-a11y/accessible-emoji",[],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'value' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedThemes'. Either include it or remove the dependency array.","ArrayExpression",["138"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'getGenres' is defined but never used.","no-dupe-keys","Duplicate key 'perPage'.","ObjectExpression","'InboxIcon' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [selectedThemes]",{"range":"141","text":"142"},[761,763],"[selectedThemes]"]